{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LoginScreen = LoginScreen;\nexports.RegisterScreen = RegisterScreen;\nexports.WelcomeScreen = WelcomeScreen;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _reactNative = require(\"react-native\");\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _auth = _interopRequireDefault(require(\"@react-native-firebase/auth\"));\nvar _loginStyles = _interopRequireDefault(require(\"./loginStyles\"));\nvar _native = require(\"@react-navigation/native\");\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _jsxFileName = \"C:\\\\Users\\\\timkr\\\\Desktop\\\\DemBoyz\\\\src\\\\LoginScreens.js\",\n  _this = this;\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction WelcomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = (0, _react.useState)(true),\n    _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n    initializing = _useState2[0],\n    setInitializing = _useState2[1];\n  var _useState3 = (0, _react.useState)(),\n    _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n    user = _useState4[0],\n    setUser = _useState4[1];\n\n  function onAuthStateChanged(user) {\n    setUser(user);\n    if (initializing) setInitializing(false);\n    if (user) navigation.navigate('RegistrationScreen');\n  }\n  (0, _react.useEffect)(function () {\n    var subscriber = (0, _auth.default)().onAuthStateChanged(onAuthStateChanged);\n    return subscriber;\n  }, []);\n  if (initializing) return null;\n  return (0, _jsxRuntime.jsxs)(_reactNative.View, {\n    style: _loginStyles.default.container,\n    children: [(0, _jsxRuntime.jsx)(_reactNative.Image, {\n      style: _loginStyles.default.imageLarge,\n      source: require(\"./assets/gamecock.png\")\n    }), (0, _jsxRuntime.jsx)(_reactNative.Text, {\n      style: _loginStyles.default.title,\n      children: \"Campus Connect\"\n    }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('RegisterScreen');\n      },\n      style: _loginStyles.default.loginBtn,\n      children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n        style: _loginStyles.default.loginText,\n        children: \"REGISTER\"\n      })\n    }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('LoginScreen');\n      },\n      style: _loginStyles.default.loginBtn,\n      children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n        style: _loginStyles.default.loginText,\n        children: \"LOGIN\"\n      })\n    }), (0, _jsxRuntime.jsx)(_reactNative.View, {\n      style: _loginStyles.default.bottomContainer,\n      children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n        style: _loginStyles.default.copyWrightText,\n        children: \"Copywright \\u24B82022 DemBoyz\"\n      })\n    })]\n  });\n}\nfunction LoginScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  var _React$useState = _react.default.useState(\"\"),\n    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n    email = _React$useState2[0],\n    setEmail = _React$useState2[1];\n  var _React$useState3 = _react.default.useState(\"\"),\n    _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),\n    password = _React$useState4[0],\n    setPassword = _React$useState4[1];\n\n  var _useState5 = (0, _react.useState)(true),\n    _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n    initializing = _useState6[0],\n    setInitializing = _useState6[1];\n  var _useState7 = (0, _react.useState)(),\n    _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n    user = _useState8[0],\n    setUser = _useState8[1];\n\n  function onAuthStateChanged(user) {\n    setUser(user);\n    if (initializing) setInitializing(false);\n    if (user) navigation.navigate('RegistrationScreen');\n  }\n  (0, _react.useEffect)(function () {\n    var subscriber = (0, _auth.default)().onAuthStateChanged(onAuthStateChanged);\n    return subscriber;\n  }, []);\n  if (initializing) return null;\n  var login = function login() {\n    if (email && password) {\n      (0, _auth.default)().signInWithEmailAndPassword(email, password).then(function () {\n        console.log('User account signed in!');\n        LoginAlert({\n          email: email\n        });\n      }).catch(function (error) {\n        FirebaseError(error.code);\n      });\n    } else {\n      LoginError();\n    }\n  };\n  return (0, _jsxRuntime.jsxs)(_reactNative.View, {\n    style: _loginStyles.default.container,\n    children: [(0, _jsxRuntime.jsx)(BackButton, {}), (0, _jsxRuntime.jsx)(_reactNative.Image, {\n      style: _loginStyles.default.imageSmall,\n      source: require(\"./assets/gamecock.png\")\n    }), (0, _jsxRuntime.jsx)(_reactNative.Text, {\n      style: _loginStyles.default.title,\n      children: \"Campus Connect\"\n    }), (0, _jsxRuntime.jsx)(_reactNative.View, {\n      style: _loginStyles.default.inputView,\n      children: (0, _jsxRuntime.jsx)(_reactNative.TextInput, {\n        style: _loginStyles.default.TextInput,\n        placeholder: \"USC Email\",\n        textContentType: \"username\",\n        autoCorrect: false,\n        autoCapitalize: \"none\",\n        autoComplete: \"email\",\n        placeholderTextColor: \"#000000\",\n        onChangeText: function onChangeText(email) {\n          return setEmail(email);\n        }\n      })\n    }), (0, _jsxRuntime.jsx)(_reactNative.View, {\n      style: _loginStyles.default.inputView,\n      children: (0, _jsxRuntime.jsx)(_reactNative.TextInput, {\n        style: _loginStyles.default.TextInput,\n        placeholder: \"Password\",\n        textContentType: \"password\",\n        autoComplete: \"password\",\n        placeholderTextColor: \"#000000\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(password) {\n          return setPassword(password);\n        }\n      })\n    }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n      children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n        style: _loginStyles.default.forgot_button,\n        children: \"Forgot Password?\"\n      })\n    }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('RegisterScreen');\n      },\n      style: _loginStyles.default.loginBtn,\n      children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n        style: _loginStyles.default.loginText,\n        children: \"REGISTER\"\n      })\n    }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n      onPress: function onPress() {\n        return login(email, password);\n      },\n      style: _loginStyles.default.loginBtn,\n      children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n        style: _loginStyles.default.loginText,\n        children: \"LOGIN\"\n      })\n    }), (0, _jsxRuntime.jsx)(_reactNative.View, {\n      style: _loginStyles.default.bottomContainer,\n      children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n        style: _loginStyles.default.copyWrightText,\n        children: \"Copywright \\u24B82022 DemBoyz\"\n      })\n    })]\n  });\n}\nfunction RegisterScreen(_ref3) {\n  var navigation = _ref3.navigation;\n  var _React$useState5 = _react.default.useState(\"\"),\n    _React$useState6 = (0, _slicedToArray2.default)(_React$useState5, 2),\n    email = _React$useState6[0],\n    setEmail = _React$useState6[1];\n  var _React$useState7 = _react.default.useState(\"\"),\n    _React$useState8 = (0, _slicedToArray2.default)(_React$useState7, 2),\n    password = _React$useState8[0],\n    setPassword = _React$useState8[1];\n  var _React$useState9 = _react.default.useState(\"\"),\n    _React$useState10 = (0, _slicedToArray2.default)(_React$useState9, 2),\n    password2 = _React$useState10[0],\n    setPassword2 = _React$useState10[1];\n\n  var _useState9 = (0, _react.useState)(true),\n    _useState10 = (0, _slicedToArray2.default)(_useState9, 2),\n    initializing = _useState10[0],\n    setInitializing = _useState10[1];\n  var _useState11 = (0, _react.useState)(),\n    _useState12 = (0, _slicedToArray2.default)(_useState11, 2),\n    user = _useState12[0],\n    setUser = _useState12[1];\n\n  function onAuthStateChanged(user) {\n    setUser(user);\n    if (initializing) setInitializing(false);\n    if (user) navigation.navigate('RegistrationScreen');\n  }\n  (0, _react.useEffect)(function () {\n    var subscriber = (0, _auth.default)().onAuthStateChanged(onAuthStateChanged);\n    return subscriber;\n  }, []);\n  if (initializing) return null;\n  var register = function register() {\n    if (email && password && password === password2) {\n      (0, _auth.default)().createUserWithEmailAndPassword(email, password).then(function () {\n        console.log('User account created & signed in!');\n      }).catch(function (error) {\n        FirebaseError(error.code);\n      });\n    } else {\n      RegisterError();\n    }\n  };\n  return (0, _jsxRuntime.jsxs)(_reactNative.View, {\n    style: _loginStyles.default.container,\n    children: [(0, _jsxRuntime.jsx)(BackButton, {}), (0, _jsxRuntime.jsx)(_reactNative.Image, {\n      style: _loginStyles.default.imageSmall,\n      source: require(\"./assets/gamecock.png\")\n    }), (0, _jsxRuntime.jsx)(_reactNative.Text, {\n      style: _loginStyles.default.title,\n      children: \"Campus Connect\"\n    }), (0, _jsxRuntime.jsx)(_reactNative.View, {\n      style: _loginStyles.default.inputView,\n      children: (0, _jsxRuntime.jsx)(_reactNative.TextInput, {\n        style: _loginStyles.default.TextInput,\n        placeholder: \"USC Email\",\n        textContentType: \"username\",\n        autoCorrect: false,\n        autoCapitalize: \"none\",\n        autoComplete: \"email\",\n        placeholderTextColor: \"#000000\",\n        onChangeText: function onChangeText(email) {\n          return setEmail(email);\n        }\n      })\n    }), (0, _jsxRuntime.jsx)(_reactNative.View, {\n      style: _loginStyles.default.inputView,\n      children: (0, _jsxRuntime.jsx)(_reactNative.TextInput, {\n        style: _loginStyles.default.TextInput,\n        placeholder: \"Password\",\n        textContentType: \"newPassword\",\n        autoComplete: \"password-new\",\n        placeholderTextColor: \"#000000\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(password) {\n          return setPassword(password);\n        }\n      })\n    }), (0, _jsxRuntime.jsx)(_reactNative.View, {\n      style: _loginStyles.default.inputView,\n      children: (0, _jsxRuntime.jsx)(_reactNative.TextInput, {\n        style: _loginStyles.default.TextInput,\n        placeholder: \"Confirm Password\",\n        textContentType: \"newPassword\",\n        autoComplete: \"password-new\",\n        placeholderTextColor: \"#000000\",\n        secureTextEntry: true,\n        onChangeText: function onChangeText(password2) {\n          return setPassword2(password2);\n        }\n      })\n    }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n      children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n        style: _loginStyles.default.forgot_button,\n        children: \"Forgot Password?\"\n      })\n    }), (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n      onPress: function onPress() {\n        return register(email, password);\n      },\n      style: _loginStyles.default.loginBtn,\n      children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n        style: _loginStyles.default.loginText,\n        children: \"REGISTER\"\n      })\n    }), (0, _jsxRuntime.jsx)(_reactNative.View, {\n      style: _loginStyles.default.bottomContainer,\n      children: (0, _jsxRuntime.jsx)(_reactNative.Text, {\n        style: _loginStyles.default.copyWrightText,\n        children: \"Copywright \\u24B82022 DemBoyz\"\n      })\n    })]\n  });\n}\nvar BackButton = function BackButton() {\n  var navigation = (0, _native.useNavigation)();\n  return (0, _jsxRuntime.jsx)(_reactNative.TouchableOpacity, {\n    style: _loginStyles.default.backButtonContainer,\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    children: (0, _jsxRuntime.jsx)(_reactNative.ImageBackground, {\n      style: _loginStyles.default.backButtonImage,\n      source: require(\"./assets/back_arrow.png\")\n    })\n  });\n};\nvar LoginAlert = function LoginAlert(_ref4) {\n  var email = _ref4.email;\n  _reactNative.Alert.alert('Logged in!', \"Successfully logged in \" + email, [{\n    text: \"OK\"\n  }]);\n};\nvar RegisterAlert = function RegisterAlert(_ref5) {\n  var email = _ref5.email;\n  _reactNative.Alert.alert('Registered!', \"Successfully registered \" + email, [{\n    text: \"OK\"\n  }]);\n};\nvar RegisterError = function RegisterError() {\n  _reactNative.Alert.alert('Invalid format', \"Make sure passwords are the same and a valid email was entered.\", [{\n    text: \"OK\"\n  }]);\n};\nvar FirebaseError = function FirebaseError(error) {\n  _reactNative.Alert.alert('Error', error, [{\n    text: \"OK\"\n  }]);\n};\nvar LoginError = function LoginError() {\n  _reactNative.Alert.alert('Invalid format', \"Make sure email and password field are not empty.\", [{\n    text: \"OK\"\n  }]);\n};","map":{"version":3,"names":["WelcomeScreen","navigation","useState","initializing","setInitializing","user","setUser","onAuthStateChanged","navigate","useEffect","subscriber","auth","styles","container","imageLarge","require","title","loginBtn","loginText","bottomContainer","copyWrightText","LoginScreen","React","email","setEmail","password","setPassword","login","signInWithEmailAndPassword","then","console","log","LoginAlert","catch","error","FirebaseError","code","LoginError","imageSmall","inputView","TextInput","forgot_button","RegisterScreen","password2","setPassword2","register","createUserWithEmailAndPassword","RegisterError","BackButton","useNavigation","backButtonContainer","goBack","backButtonImage","Alert","alert","text","RegisterAlert"],"sources":["C:/Users/timkr/Desktop/DemBoyz/src/LoginScreens.js"],"sourcesContent":["import { Modal, StatusBar } from 'react-native';\r\nimport React, { useState, useEffect, useContext } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  Image,\r\n  ImageBackground,\r\n  TextInput,\r\n  Button,\r\n  TouchableOpacity,\r\n  Alert,\r\n  ScrollView,\r\n} from \"react-native\";\r\n\r\nimport auth from '@react-native-firebase/auth';\r\n\r\nimport styles from './loginStyles';\r\nimport { NavigationContainer, StackActions } from '@react-navigation/native';\r\nimport { useNavigation } from '@react-navigation/native';\r\n\r\n\r\nexport function WelcomeScreen({navigation}) {\r\n\r\n  // Set an initializing state whilst Firebase connects\r\n  const [initializing, setInitializing] = useState(true);\r\n  const [user, setUser] = useState();\r\n\r\n  // Handle user state changes\r\n  function onAuthStateChanged(user) {\r\n    setUser(user);\r\n    if (initializing) setInitializing(false);\r\n    if (user) navigation.navigate('RegistrationScreen');\r\n  }\r\n\r\n  useEffect(() => {\r\n    const subscriber = auth().onAuthStateChanged(onAuthStateChanged);\r\n    return subscriber; // unsubscribe on unmount\r\n  }, []);\r\n\r\n  if (initializing) return null;\r\n \r\n  return (\r\n    <View style={styles.container}>\r\n      <Image style={styles.imageLarge} source={require(\"./assets/gamecock.png\")} />\r\n      <Text style= {styles.title}>Campus Connect</Text>\r\n\r\n      <TouchableOpacity onPress={ () => navigation.navigate('RegisterScreen')} style={styles.loginBtn}>\r\n        <Text style={styles.loginText}>REGISTER</Text>\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity onPress={ () => navigation.navigate('LoginScreen')} style={styles.loginBtn}>\r\n        <Text style={styles.loginText}>LOGIN</Text>\r\n      </TouchableOpacity>\r\n      <View style={styles.bottomContainer}>\r\n        <Text style={styles.copyWrightText}>Copywright Ⓒ2022 DemBoyz</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\n \r\nexport function LoginScreen({ navigation}) {\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n\r\n    // Set an initializing state whilst Firebase connects\r\n    const [initializing, setInitializing] = useState(true);\r\n    const [user, setUser] = useState();\r\n  \r\n    // Handle user state changes\r\n    function onAuthStateChanged(user) {\r\n      setUser(user);\r\n      if (initializing) setInitializing(false);\r\n      if (user) navigation.navigate('RegistrationScreen');\r\n    }\r\n\r\n    useEffect(() => {\r\n      const subscriber = auth().onAuthStateChanged(onAuthStateChanged);\r\n      return subscriber; // unsubscribe on unmount\r\n    }, []);\r\n  \r\n    if (initializing) return null;\r\n\r\n\r\n  const login = () => {\r\n    if (email && password){\r\n      auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        console.log('User account signed in!');\r\n        LoginAlert({email})\r\n      })\r\n      .catch(error => {\r\n        FirebaseError(error.code);\r\n      });\r\n    }\r\n    else {\r\n      LoginError();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <BackButton/>\r\n      <Image style={styles.imageSmall} source={require(\"./assets/gamecock.png\")} />\r\n      <Text style= {styles.title}>Campus Connect</Text>\r\n\r\n      <View style={styles.inputView}>\r\n        <TextInput\r\n          style={styles.TextInput}\r\n          placeholder=\"USC Email\"\r\n          textContentType='username'\r\n          autoCorrect = {false}\r\n          autoCapitalize = {\"none\"}\r\n          autoComplete = {\"email\"}\r\n          placeholderTextColor=\"#000000\"\r\n          onChangeText={(email) => setEmail(email)}\r\n        />\r\n      </View>\r\n \r\n      <View style={styles.inputView}>\r\n        <TextInput\r\n          style={styles.TextInput}\r\n          placeholder=\"Password\"\r\n          textContentType={\"password\"}\r\n          autoComplete = {\"password\"}\r\n          placeholderTextColor=\"#000000\"\r\n          secureTextEntry={true}\r\n          onChangeText={(password) => setPassword(password)}\r\n        />\r\n      </View>\r\n \r\n      <TouchableOpacity>\r\n        <Text style={styles.forgot_button}>Forgot Password?</Text>\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity onPress={ () => navigation.navigate('RegisterScreen')} style={styles.loginBtn}>\r\n        <Text style={styles.loginText}>REGISTER</Text>\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity onPress= {() => login(email,password)} style={styles.loginBtn}>\r\n        <Text style={styles.loginText}>LOGIN</Text>\r\n      </TouchableOpacity>\r\n      <View style={styles.bottomContainer}>\r\n        <Text style={styles.copyWrightText}>Copywright Ⓒ2022 DemBoyz</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport function RegisterScreen({ navigation}){\r\n  const [email, setEmail] = React.useState(\"\");\r\n  const [password, setPassword] = React.useState(\"\");\r\n  const [password2, setPassword2] = React.useState(\"\");\r\n\r\n    // Set an initializing state whilst Firebase connects\r\n    const [initializing, setInitializing] = useState(true);\r\n    const [user, setUser] = useState();\r\n  \r\n    // Handle user state changes\r\n    function onAuthStateChanged(user) {\r\n    setUser(user);\r\n    if (initializing) setInitializing(false);\r\n    if (user) navigation.navigate('RegistrationScreen');\r\n    }\r\n\r\n    useEffect(() => {\r\n      const subscriber = auth().onAuthStateChanged(onAuthStateChanged);\r\n      return subscriber; // unsubscribe on unmount\r\n    }, []);\r\n  \r\n    if (initializing) return null;\r\n\r\n  const register = () => {\r\n    if (email && password && (password === password2)){\r\n      auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        console.log('User account created & signed in!');\r\n      })\r\n      .catch(error => {\r\n        FirebaseError(error.code);\r\n      });\r\n    }\r\n    else {\r\n      RegisterError();\r\n    }\r\n  }\r\n\r\n \r\n  return (\r\n    <View style={styles.container}>\r\n      <BackButton/>\r\n      <Image style={styles.imageSmall} source={require(\"./assets/gamecock.png\")} />\r\n      <Text style= {styles.title}>Campus Connect</Text>\r\n      <View style={styles.inputView}>\r\n        <TextInput\r\n          style={styles.TextInput}\r\n          placeholder=\"USC Email\"\r\n          textContentType='username'\r\n          autoCorrect = {false}\r\n          autoCapitalize = {\"none\"}\r\n          autoComplete = {\"email\"}\r\n          placeholderTextColor=\"#000000\"\r\n          onChangeText={(email) => setEmail(email)}\r\n        />\r\n      </View>\r\n \r\n      <View style={styles.inputView}>\r\n        <TextInput\r\n          style={styles.TextInput}\r\n          placeholder=\"Password\"\r\n          textContentType={\"newPassword\"}\r\n          autoComplete = {\"password-new\"}\r\n          placeholderTextColor=\"#000000\"\r\n          secureTextEntry={true}\r\n          onChangeText={(password) => setPassword(password)}\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.inputView}>\r\n        <TextInput\r\n          style={styles.TextInput}\r\n          placeholder=\"Confirm Password\"\r\n          textContentType={\"newPassword\"}\r\n          autoComplete = {\"password-new\"}\r\n          placeholderTextColor=\"#000000\"\r\n          secureTextEntry={true}\r\n          onChangeText={(password2) => setPassword2(password2)}\r\n        />\r\n      </View>\r\n \r\n      <TouchableOpacity>\r\n        <Text style={styles.forgot_button}>Forgot Password?</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity onPress={() => register(email,password)} style={styles.loginBtn}>\r\n        <Text style={styles.loginText}>REGISTER</Text>\r\n      </TouchableOpacity>\r\n      <View style={styles.bottomContainer}>\r\n        <Text style={styles.copyWrightText}>Copywright Ⓒ2022 DemBoyz</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst BackButton = () => {\r\n  const navigation = useNavigation();\r\n  return (\r\n      <TouchableOpacity style={styles.backButtonContainer} onPress={ () => navigation.goBack()}>\r\n        <ImageBackground style={styles.backButtonImage} source={require(\"./assets/back_arrow.png\")} />\r\n      </TouchableOpacity>\r\n  )\r\n}\r\n\r\nconst LoginAlert = ({email}) => {\r\n    Alert.alert('Logged in!', \"Successfully logged in \" + email, [\r\n      { text: \"OK\"}\r\n    ] );\r\n\r\n}\r\nconst RegisterAlert = ({email}) => {\r\n  Alert.alert('Registered!', \"Successfully registered \" + email, [\r\n    { text: \"OK\"}\r\n  ] );\r\n}\r\n\r\nconst RegisterError = () => {\r\n  Alert.alert('Invalid format', \"Make sure passwords are the same and a valid email was entered.\", [\r\n    { text: \"OK\"}\r\n  ] );\r\n}\r\n\r\nconst FirebaseError = (error) => {\r\n  Alert.alert('Error', error, [\r\n    { text: \"OK\"}\r\n  ] );\r\n}\r\n\r\nconst LoginError = () => {\r\n  Alert.alert('Invalid format', \"Make sure email and password field are not empty.\", [\r\n    { text: \"OK\"}\r\n  ] );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}